{"version":3,"file":"static/js/3.22ebc5f3.chunk.js","mappings":"qQAIMA,EAAkB,SAACC,GAAD,MAAa,CACjCC,OAAOD,EAAME,KAAKD,S,sECJtB,EAA0B,yBAA1B,EAAoE,gCAApE,EAAqH,gCAArH,EAAsK,gCCMhKE,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,QAASF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,IAAK,aAAaC,SA+CnE,EA1CmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACpB,OACE,gBAAKC,UAAWC,EAAwB,2BAAxC,UACE,SAAC,KAAD,CACEC,cAAe,CAAEC,WAAY,IAC7BC,iBAAkBZ,EAClBa,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCC,YAAW,WACRV,EAAgBO,EAAOH,YACxBI,GAAc,GACdC,MACC,MARP,SAWG,gBAAGF,EAAH,EAAGA,OAAQI,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAzB,OACC,UAAC,KAAD,CAAMN,SAAUK,EAAhB,WACE,SAACE,EAAA,QAAD,WACE,SAAC,KAAD,CACEC,UAAU,WACVC,KAAK,aACLC,MAAOT,EAAOH,WACdH,UAAU,QACVgB,KAAM,EACNC,YAAY,4BAGhB,SAAC,KAAD,CACEH,KAAK,aACLD,UAAU,MACVb,UAAU,kBAGZ,SAACkB,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAUT,EAAcU,QAAQ,QAAtD,2B,UC5CZ,GAAgB,OAAS,4BCkBzB,EAhBmB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAE/B,OACE,gBAAKvB,UAAWC,EAAAA,YAAhB,UACE,SAAC,KAAD,CAEED,UAAW,SAACwB,GAAD,OAAcA,EAAQC,SAAWxB,EAAAA,OAAgB,IAC5DyB,GAAE,kBAAaJ,GAHjB,SAKGC,GAJID,MCPb,EAA0B,yBCK1B,EAJgB,SAAC,GAAiB,IAAfK,EAAc,EAAdA,QACjB,OAAO,gBAAK3B,UAAWC,EAAhB,SAAiC0B,KCoC1C,EAhCgB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,YAAa7B,EAAsC,EAAtCA,gBAE1B8B,GAFgE,EAArBC,eAExBF,EAAYG,QAAQC,KAAI,SAACC,GAAD,OAC7C,SAAC,EAAD,CACEX,UAAWW,EAAOX,UAClBC,YAAaU,EAAOV,aACfU,EAAOX,eAKZY,EAAoBN,EAAYO,SAASH,KAAI,SAACL,GAAD,OAC/C,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQS,OAGlD,OACE,oBAASpC,UAAWC,EAApB,UACE,UAACoC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAGvC,UAAWC,EAAiB,SAAxC,SACG4B,KAEH,SAACS,EAAA,EAAD,CAAKtC,UAAWC,EAAhB,UACE,iBAAKD,UAAU,4CAAf,WACE,gBAAKA,UAAU,0BAAf,SAA0CkC,KAC1C,SAAC,EAAD,CAAYnC,gBAAiBA,eCLzC,GAAeyC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAnBsB,SAACpD,GAAD,MAAY,CAAEuC,YAAavC,EAAMuC,gBAG9B,SAACc,GAAD,MAAe,CAExC3C,gBAAiB,SAAC4C,GAChBD,GAASE,EAAAA,EAAAA,GAAyBD,URNN,SAACE,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAKC,MAAM1D,QAGT,SAACuD,GAAD,UAAeE,KAAKC,SAFlB,SAAC,KAAD,CAAUtB,GAAG,eAJmB,GACbuB,EAAAA,WAUhC,OAFmCR,EAAAA,EAAAA,IAAQrD,EAARqD,CAAyBK,KQS9D,CAGEI","sources":["hoc/WithAuthRedirect.js","webpack://learning-react/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogForm.js","webpack://learning-react/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.js","webpack://learning-react/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state)  => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  const ConnectedRedicectComponent = connect(mapStateToProps)(RedirectComponent);\r\n  \r\n  return ConnectedRedicectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__u-jY5\",\"dialogMessages\":\"Dialogs_dialogMessages__24PX8\",\"newMessageForm\":\"Dialogs_newMessageForm__7B-9k\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__Oefd5\"};","import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { Form as FormBootstrap, Button } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"./Dialogs.module.css\";\r\n\r\n\r\n// validation schema\r\nconst DialogFormSchema = Yup.object().shape({\r\n  newPost: Yup.string().min(2, \"Too Short!\").max(200, \"Too Long!\").trim(),\r\n  // .required(\"Required\"),\r\n});\r\n\r\n\r\nconst DialogForm = ({ onAddNewMessage }) => {\r\n  return (\r\n    <div className={styles.newMessageForm + \" mt-auto w-100 px-4 py-4\"}>\r\n      <Formik\r\n        initialValues={{ newMessage: \"\" }}\r\n        validationSchema={DialogFormSchema}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          setTimeout(() => {\r\n             onAddNewMessage(values.newMessage);\r\n            setSubmitting(false);\r\n            resetForm();\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, isSubmitting }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <FormBootstrap.Group>\r\n              <Field\r\n                component=\"textarea\"\r\n                name=\"newMessage\"\r\n                value={values.newMessage}\r\n                className=\"w-100\"\r\n                rows={3}\r\n                placeholder=\"Type your message...\"\r\n              />\r\n            </FormBootstrap.Group>\r\n            <ErrorMessage\r\n              name=\"newMessage\"\r\n              component=\"div\"\r\n              className=\"errorMessage\"\r\n            />\r\n\r\n            <Button type=\"submit\" disabled={isSubmitting} variant=\"light\">\r\n              Send\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default DialogForm;","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"DialogItem_active__O32ft\"};","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./DialogItem.module.css\";\r\n\r\nconst DialogItem = ({ contactId, contactName }) => {\r\n\r\n  return (\r\n    <div className={styles.contactWrap}>\r\n      <NavLink\r\n        key={contactId}\r\n        className={(navData) => (navData.isActive ? styles.active : \"\")}\r\n        to={`/dialog/${contactId}`}\r\n      >\r\n        {contactName}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__kfdLb\"};","import styles from \"./Message.module.css\";\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={styles.message}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport DialogForm from \"./DialogForm\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = ({ dialogsPage, onAddNewMessage, onMessageInput }) => {\r\n  // create DialogItem componets array\r\n  let dialogComponents = dialogsPage.dialogs.map((dialog) => (\r\n    <DialogItem\r\n      contactId={dialog.contactId}\r\n      contactName={dialog.contactName}\r\n      key={dialog.contactId}\r\n    />\r\n  ));\r\n\r\n  // create Message componets array\r\n  let messageComponents = dialogsPage.messages.map((message) => (\r\n    <Message message={message.message} key={message.id} />\r\n  ));\r\n\r\n  return (\r\n    <section className={styles.dialogsWrapper}>\r\n      <Row>\r\n        <Col md={3} className={styles.dialogs + \" pt-4 \"}>\r\n          {dialogComponents}\r\n        </Col>\r\n        <Col className={styles.dialogMessages}>\r\n          <div className=\"pt-4 d-flex align-items-start flex-column\">\r\n            <div className=\"messagesWrap px-4 w-100\">{messageComponents}</div>\r\n            <DialogForm onAddNewMessage={onAddNewMessage} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport {\r\n  sendMessageActionCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = (state) => ({ dialogsPage: state.dialogsPage });\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  onAddNewMessage: (text) => {\r\n    dispatch(sendMessageActionCreator(text));\r\n  },\r\n});\r\n\r\n// const AuthRedirectComponent = WithAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(AuthRedirectComponent);\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  WithAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n"],"names":["mapStateToProps","state","isAuth","auth","DialogFormSchema","Yup","shape","newPost","min","max","trim","onAddNewMessage","className","styles","initialValues","newMessage","validationSchema","onSubmit","values","setSubmitting","resetForm","setTimeout","handleSubmit","isSubmitting","Form","component","name","value","rows","placeholder","Button","type","disabled","variant","contactId","contactName","navData","isActive","to","message","dialogsPage","dialogComponents","onMessageInput","dialogs","map","dialog","messageComponents","messages","id","Row","Col","md","compose","connect","dispatch","text","sendMessageActionCreator","Component","RedirectComponent","this","props","React","Dialogs"],"sourceRoot":""}